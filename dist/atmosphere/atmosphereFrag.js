export default "#define GLSLIFY 1\nuniform float time;\nuniform vec2 resolution;\nuniform float opacity;\nuniform vec3 color;\nuniform float fresnel;\n\nin vec3 outNormal;\nin vec3 vertPos;\n\n#if NUM_DIR_LIGHTS > 0\nstruct DirectionalLight {\n  vec3 direction;\n  vec3 color;\n};\nuniform DirectionalLight directionalLights[NUM_DIR_LIGHTS];\n#endif\n\nvec3 wrapDiffuse(vec3 normal, float wrap) {\n  vec3 lightDir = directionalLights[0].direction;\n  vec3 lightColor = directionalLights[0].color;\n  return lightColor * max(0.0, (dot(lightDir, normal) + wrap) / (1.0 + wrap));\n}\n\nvoid main() {\n  float m = (1.0 - dot(normalize(vec3(0.0) - vertPos), outNormal));\n  float fres = pow(m, fresnel);\n  vec3 mixcolor = color * wrapDiffuse(outNormal, 0.5);\n  float alpha = mix(0.0, opacity, fres);\n  gl_FragColor = vec4(mixcolor, alpha);\n}"