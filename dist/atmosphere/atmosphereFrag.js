export default "#define GLSLIFY 1\nuniform float time;\nuniform vec2 resolution;\nuniform float opacity;\nuniform vec3 color;\n\nin vec3 outNormal;\n\n#if NUM_DIR_LIGHTS > 0\nstruct DirectionalLight {\n  vec3 direction;\n  vec3 color;\n};\nuniform DirectionalLight directionalLights[NUM_DIR_LIGHTS];\n#endif\n\nvec3 diffuse(vec3 normal) {\n  vec3 lightDir = directionalLights[0].direction;\n  vec3 lightColor = directionalLights[0].color;\n  vec3 norm = normalize(normal);\n  float diff = max(dot(norm, lightDir), 0.0);\n  return diff * lightColor;\n}\n\nvoid main() {\n  vec3 mixcolor = color * diffuse(outNormal);\n  gl_FragColor = vec4(mixcolor, opacity);\n}"